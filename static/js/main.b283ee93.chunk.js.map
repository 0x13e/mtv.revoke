{"version":3,"sources":["common/abis.ts","common/constants.ts","common/util.ts","ERC20/Erc20Token.tsx","ERC20/util.ts","ERC20/Erc20TokenList.tsx","ERC721/util.ts","ERC721/Erc721Token.tsx","ERC721/Erc721TokenList.tsx","Dashboard.tsx","DonateButton/DonateButton.tsx","DonateButton/util.ts","App.tsx","index.tsx"],"names":["ERC20","ERC20Artifct","abi","ERC721Metadata","ERC721MetadataArtifact","TokensView","constant","inputs","internalType","name","type","outputs","payable","stateMutability","components","OPENSEA_REGISTRY","TRUSTWALLET_BASE_URL","ADDRESS_ZERO_PADDED","ADDRESS_ZERO","DUMMY_ADDRESS","T2CR_ADDRESS","isRegistered","tokenAddress","provider","tokenMapping","a","getNetwork","chainId","isRegisteredInKleros","isRegisteredInTokenMapping","tokensViewContract","Contract","functions","getTokensIDsForAddresses","tokenID","undefined","getAddress","shortenAddress","address","substr","length","compareBN","b","BigNumber","from","diff","sub","isZero","lt","addressToAppName","networkName","axios","get","data","appName","lookupEnsName","lookupAddress","getExplorerUrl","1","3","4","5","6","10","30","42","56","61","63","77","97","99","100","137","10000","42161","43113","43114","62621","80001","getTrustWalletName","getDappListName","getFullTokenMapping","getTokenMapping","erc20Mapping","erc721Mapping","fullMapping","standard","url","getTokenListUrl","res","tokens","token","mapping","ERC721","getTokenIcon","normalisedAddress","tokenData","iconFromMapping","logoURI","startsWith","iconFromTrust","icon","toFloat","n","decimals","toFixed","Erc20Token","state","allowances","loading","this","loadData","prevProps","props","inputAddress","approvals","filter","approval","i","findIndex","other","topics","Promise","all","map","ev","spender","hexDataSlice","contract","allowance","toString","formatAllowance","ensSpender","dappListNetworkName","spenderAppName","newAllowance","sort","setState","update","bnNew","fromFloat","bnOld","console","debug","approve","tx","code","gte","decreaseApproval","abs","increaseApproval","wait","otherAllowance","s","sides","split","padEnd","slice","totalSupply","allowanceBN","totalSupplyBN","gt","Number","balance","className","renderTokenOrLoading","size","color","renderToken","renderAllowanceList","symbol","explorerUrl","href","style","renderTokenBalance","colSpan","renderAllowance","shortenedSpender","explorerBaseUrl","shortenedLink","regularLink","Form","inline","key","renderRevokeButton","canRevoke","signerAddress","revokeButton","Button","disabled","onClick","revoke","tooltip","Tooltip","id","OverlayTrigger","overlay","canUpdate","updateGroup","InputGroup","Control","value","onChange","event","updatedAllowances","target","Append","Component","getTokenData","ownerAddress","balanceOf","Erc20TokenList","erc20Interface","Interface","signerOrProvider","signer","getBlockNumber","latestBlockNumber","getLogs","fromBlock","toBlock","getEventTopic","hexZeroPad","transfers","allEvents","tokenContracts","tokenApprovals","registered","unsortedTokens","localeCompare","css","tokenComponents","filterRegisteredTokens","filterZeroBalances","throwIfNotErc721","openseaProxyAddress","addressToAppNameBase","getOpenSeaProxyAddress","userAddress","proxies","proxyAddress","isApprovedForAll","log","Error","Erc721Token","approvalsForAll","openSeaProxyAddress","unlimitedAllowances","index","getApproved","limitedAllowances","setApprovalForAll","allowanceEquals","String","src","alt","width","onError","renderAllowanceText","Erc721TokenList","erc721Interface","tokenApprovalsForAll","Dashboard","tokenStandard","handleRegisteredCheckboxChange","checked","handleZeroBalancesCheckboxChange","includes","renderSelectionSwitch","renderRegistrationCheckbox","renderErc20TokenList","paddingBottom","marginBottom","onlabel","offlabel","onstyle","offstyle","updateTokenStandard","infoLink","rel","marginRight","DonateButton","nativeToken","getNativeToken","useState","getDefaultAmount","amount","setAmount","show","setShow","sendDonation","alert","utils","parseEther","to","sendTransaction","toast","dark","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","variant","Modal","onHide","Header","closeButton","Title","Body","Text","Footer","App","showDonateModal","connectProvider","window","ethereum","web3","connectSigner","on","location","reload","request","method","providers","Web3Provider","updateProvider","currentProvider","InfuraProvider","post","connection","WebSocketProvider","injectedProvider","getSigner","signerEnsName","inputAddressOrName","parseInputAddress","endsWith","resolveName","Container","fluid","renderHeader","renderAddressInput","renderTokenList","renderFooter","renderToastContainer","Row","Col","text","border","connectWeb3","lg","md","sm","newestOnTop","rtl","pauseOnFocusLoss","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b283ee93.chunk.js","sourcesContent":["import ERC20Artifct from '@openzeppelin/contracts/build/contracts/ERC20.json'\nimport ERC721MetadataArtifact from '@openzeppelin/contracts/build/contracts/ERC721.json'\n\nexport const ERC20 = ERC20Artifct.abi\nexport const ERC721Metadata = ERC721MetadataArtifact.abi\n\nexport const TokensView = [\n  {\n    constant: true,\n    inputs: [\n      { internalType: \"address\", name: \"_t2crAddress\", type: \"address\" },\n      { internalType: \"address[]\", name: \"_tokenAddresses\", type: \"address[]\" }\n    ],\n    name: \"getTokensIDsForAddresses\",\n    outputs: [{ internalType: \"bytes32[]\", name: \"result\", type: \"bytes32[]\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [\n      { internalType: \"address\", name: \"_t2crAddress\", type: \"address\" },\n      { internalType: \"bytes32[]\", name: \"_tokenIDs\", type: \"bytes32[]\" }\n    ],\n    name: \"getTokens\",\n    outputs: [\n      {\n        components: [\n          { internalType: \"bytes32\", name: \"ID\", type: \"bytes32\" },\n          { internalType: \"string\", name: \"name\", type: \"string\" },\n          { internalType: \"string\", name: \"ticker\", type: \"string\" },\n          { internalType: \"address\", name: \"addr\", type: \"address\" },\n          { internalType: \"string\", name: \"symbolMultihash\", type: \"string\" },\n          {\n            internalType: \"enum IArbitrableTokenList.TokenStatus\",\n            name: \"status\",\n            type: \"uint8\"\n          },\n          { internalType: \"uint256\", name: \"decimals\", type: \"uint256\" }\n        ],\n        internalType: \"struct TokensView.Token[]\",\n        name: \"tokens\",\n        type: \"tuple[]\"\n      }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  }\n]\n\nexport const OPENSEA_REGISTRY = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialAddressSet\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"endGrantAuthentication\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"revokeAuthentication\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"pending\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"contracts\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"delegateProxyImplementation\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"proxies\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"startGrantAuthentication\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"registerProxy\",\"outputs\":[{\"name\":\"proxy\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DELAY_PERIOD\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authAddress\",\"type\":\"address\"}],\"name\":\"grantInitialAuthentication\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]\n","export const TRUSTWALLET_BASE_URL =\n  \"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains\";\nexport const DAPP_LIST_BASE_URL = \"/dapp-contract-list\";\n\nexport const ADDRESS_ZERO_PADDED =\n  \"0x0000000000000000000000000000000000000000000000000000000000000000\";\nexport const ADDRESS_ZERO = '0x0000000000000000000000000000000000000000';\nexport const DUMMY_ADDRESS = '0x0000000000000000000000000000000000000001';\nexport const OPENSEA_REGISTRY_ADDRESS = '0xa5409ec958C83C3f309868babACA7c86DCB077c1';\nexport const ERC20_BADGE_ADDRESS = \"0xCb4Aae35333193232421E86Cd2E9b6C91f3B125F\";\nexport const T2CR_ADDRESS = \"0xEbcf3bcA271B26ae4B162Ba560e243055Af0E679\";\nexport const TOKENS_VIEW_ADDRESS = \"0xf9b9b5440340123B21BFf1dDAFE1ad6Feb9D6E7F\";\n","import axios from 'axios'\nimport { BigNumberish, BigNumber, providers, Contract } from 'ethers'\nimport { getAddress } from 'ethers/lib/utils'\nimport { TokensView } from './abis'\nimport { ADDRESS_ZERO_PADDED, DAPP_LIST_BASE_URL, T2CR_ADDRESS, TOKENS_VIEW_ADDRESS, TRUSTWALLET_BASE_URL } from './constants'\nimport { TokenFromList, TokenMapping, TokenStandard } from './interfaces'\n\n// Check if a token is registered in the Kleros T2CR (ETH) or tokenlist (other chains)\nexport async function isRegistered(tokenAddress: string, provider: providers.Provider, tokenMapping?: TokenMapping): Promise<boolean> {\n  const { chainId } = await provider.getNetwork()\n\n  // On mainnet ethereum we use Kleros T2CR as a decentralised registry\n  if (chainId === 1) return await isRegisteredInKleros(tokenAddress, provider)\n\n  // If we don't know a registered token mapping, we skip checking registration\n  if (!tokenMapping) return true\n\n  // On other EVM chains we fall back to using the specified tokenlist as a semi-centralised registry\n  return isRegisteredInTokenMapping(tokenAddress, tokenMapping);\n}\n\nasync function isRegisteredInKleros(tokenAddress: string, provider: providers.Provider): Promise<boolean> {\n  const tokensViewContract = new Contract(TOKENS_VIEW_ADDRESS, TokensView, provider)\n  const [ tokenID ] = await tokensViewContract.functions.getTokensIDsForAddresses(T2CR_ADDRESS, [tokenAddress])\n  return tokenID && tokenID[0] && tokenID[0] !== ADDRESS_ZERO_PADDED\n}\n\nfunction isRegisteredInTokenMapping(tokenAddress: string, tokenMapping: TokenMapping = {}): boolean {\n  return tokenMapping[getAddress(tokenAddress)] !== undefined;\n}\n\nexport function shortenAddress(address: string): string {\n  return `${address.substr(0, 6)}...${address.substr(address.length - 4, 4)}`\n}\n\nexport function compareBN(a: BigNumberish, b: BigNumberish): number {\n  a = BigNumber.from(a)\n  b = BigNumber.from(b)\n  const diff = a.sub(b)\n  return diff.isZero() ? 0 : diff.lt(0) ? -1 : 1\n}\n\n// Look up an address' App Name using the dapp-contract-list\nexport async function addressToAppName(address: string, networkName?: string): Promise<string | undefined> {\n  if (!networkName) return undefined\n\n  try {\n    const { data } = await axios.get(`${DAPP_LIST_BASE_URL}/${networkName}/${getAddress(address)}.json`)\n    return data.appName\n  } catch {\n    return undefined\n  }\n}\n\nexport async function lookupEnsName(address: string, provider: providers.Provider): Promise<string | undefined> {\n  try {\n    return await provider.lookupAddress(address)\n  } catch {\n    return undefined\n  }\n}\n\nexport function getExplorerUrl(chainId: number): string | undefined {\n  // Includes all Etherscan, BScScan, BlockScout, Matic, Avalanche explorers\n  const mapping = {\n    1: 'https://etherscan.io/address',\n    3: 'https://ropsten.etherscan.io/address',\n    4: 'https://rinkeby.etherscan.io/address',\n    5: 'https://goerli.etherscan.io/address',\n    6: 'https://blockscout.com/etc/kotti/address',\n    10: 'https://optimistic.etherscan.io/address',\n    30: 'https://blockscout.com/rsk/mainnet/address',\n    42: 'https://kovan.etherscan.io/address',\n    56: 'https://bscscan.com/address',\n    61: 'https://blockscout.com/etc/mainnet/address',\n    63: 'https://blockscout.com/etc/mordor/address',\n    77: 'https://blockscout.com/poa/sokol/address',\n    97: 'https://testnet.bscscan.com/address',\n    99: 'https://blockscout.com/poa/core/address',\n    100: 'https://blockscout.com/poa/xdai/address',\n    137: 'https://explorer-mainnet.maticvigil.com/address',\n    10000: 'https://smartscan.cash/address',\n    42161: 'https://arbiscan.io/address',\n    43113: 'https://cchain.explorer.avax-test.network/address',\n    43114: 'https://cchain.explorer.avax.network/address',\n    62621: 'https://e.mtv.ac/address',\n    80001: 'https://explorer-mumbai.maticvigil.com/address'\n  }\n\n  return mapping[chainId]\n}\n\nexport function getExplorerTokenUrl(chainId: number): string | undefined {\n  // Includes all Etherscan, BScScan, BlockScout, Matic, Avalanche explorers\n  const mapping = {\n    62621: 'https://e.mtv.ac/token',\n  }\n\n  return mapping[chainId]\n}\n\nexport function getTrustWalletName(chainId: number): string | undefined {\n  const mapping = {\n    1: 'ethereum',\n    56: 'smartchain',\n    61: 'classic',\n  }\n\n  return mapping[chainId]\n}\n\nexport function getDappListName(chainId: number): string | undefined {\n  const mapping = {\n    1: 'ethereum',\n    56: 'smartchain',\n    100: 'xdai',\n    137: 'matic',\n    10000: 'smartbch',\n    42161: 'arbitrum',\n    43114: 'avalanche',\n    62621: 'multivac',\n  }\n\n  return mapping[chainId]\n}\n\nexport function isSupportedNetwork(chainId: number): boolean {\n  // Supported for now are only ETH, xDAI, SmartBCH, Arbitrum & AVAX. Other chains fail on the RPC calls.\n  const supportedNetworks = [1, 3, 4, 5, 42, 100, 10000, 42161, 43113, 43114,62621]\n  return supportedNetworks.includes(chainId);\n}\n\nexport async function getFullTokenMapping(chainId: number): Promise<TokenMapping | undefined> {\n  const erc20Mapping = await getTokenMapping(chainId, 'ERC20')\n  const erc721Mapping = await getTokenMapping(chainId, 'ERC721')\n\n  if (erc20Mapping === undefined && erc721Mapping === undefined) return undefined\n\n  const fullMapping = { ...erc721Mapping, ...erc20Mapping }\n  return fullMapping\n}\n\nasync function getTokenMapping(chainId: number, standard: TokenStandard = 'ERC20'): Promise<TokenMapping | undefined> {\n  const url = getTokenListUrl(chainId, standard)\n\n  if (!url) return undefined\n\n  try {\n    const res = await axios.get(url)\n    const tokens: TokenFromList[] = res.data.tokens\n\n    const tokenMapping = {}\n    for (const token of tokens) {\n      tokenMapping[getAddress(token.address)] = token\n    }\n\n    return tokenMapping\n  } catch {\n    return undefined\n  }\n}\n\nfunction getTokenListUrl(chainId: number, standard: TokenStandard = 'ERC20'): string | undefined {\n  const mapping = {\n    ERC20: {\n      1: 'https://tokens.1inch.eth.link/',\n      10: 'https://static.optimism.io/optimism.tokenlist.json',\n      56: 'https://raw.githubusercontent.com/pancakeswap/pancake-swap-interface/master/src/constants/token/pancakeswap.json',\n      100: 'https://tokens.honeyswap.org',\n      137: 'https://unpkg.com/quickswap-default-token-list@1.0.28/build/quickswap-default.tokenlist.json',\n      42161: 'https://bridge.arbitrum.io/token-list-42161.json',\n      43114: 'https://raw.githubusercontent.com/pangolindex/tokenlists/main/aeb.tokenlist.json',\n    },\n    ERC721: {\n      1: 'https://raw.githubusercontent.com/vasa-develop/nft-tokenlist/master/mainnet_curated_tokens.json'\n    }\n  }\n\n  return mapping[standard][chainId]\n}\n\nexport async function getTokenIcon(tokenAddress: string, chainId: number, tokenMapping: TokenMapping = {}) {\n  const normalisedAddress = getAddress(tokenAddress)\n\n  // Retrieve a token icon from the token list if specified (filtering relative paths)\n  const tokenData = tokenMapping[normalisedAddress]\n  const iconFromMapping = !tokenData?.logoURI?.startsWith('/') && tokenData?.logoURI\n\n  // Fall back to TrustWallet/assets for logos\n  const networkName = getTrustWalletName(chainId)\n  const iconFromTrust = networkName && `${TRUSTWALLET_BASE_URL}/${networkName}/assets/${normalisedAddress}/logo.png`\n\n  const icon = iconFromMapping || iconFromTrust || 'mrc.png'\n\n  return icon\n}\n\nexport function toFloat(n: number, decimals: number): string {\n  return (n / (10 ** decimals)).toFixed(3)\n}\n","import { Signer, providers, BigNumber } from 'ethers'\nimport { getAddress, hexDataSlice } from 'ethers/lib/utils'\nimport React, { Component, ReactNode } from 'react'\nimport ClipLoader from 'react-spinners/ClipLoader'\nimport { Erc20TokenData } from '../common/interfaces'\nimport { compareBN, addressToAppName, shortenAddress, getDappListName, getExplorerUrl, getExplorerTokenUrl, lookupEnsName, toFloat } from '../common/util'\nimport { Button, Form, InputGroup, OverlayTrigger, Tooltip } from 'react-bootstrap'\n\ntype Props = {\n  provider: providers.Provider\n  chainId: number\n  signer?: Signer\n  token: Erc20TokenData\n  signerAddress: string\n  inputAddress: string\n}\n\ntype State = {\n  allowances: Allowance[]\n  icon?: string\n  loading: boolean\n}\n\ntype Allowance = {\n  spender: string\n  ensSpender?: string\n  spenderAppName?: string\n  allowance: string\n  newAllowance: string\n}\n\nclass Erc20Token extends Component<Props, State> {\n  state: State = {\n    allowances: [],\n    loading: true,\n  }\n\n  componentDidMount() {\n    this.loadData()\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.inputAddress === prevProps.inputAddress) return\n    this.loadData()\n  }\n\n  private async loadData() {\n    if (!this.props.token) return\n    if (!this.props.inputAddress) return\n\n    const { token } = this.props\n\n    // Filter out duplicate spenders\n    const approvals = token.approvals\n      .filter((approval, i) => i === token.approvals.findIndex(other => approval.topics[2] === other.topics[2]))\n\n    // Retrieve current allowance for these Approval events\n    let allowances: Allowance[] = (await Promise.all(approvals.map(async (ev) => {\n      const spender = getAddress(hexDataSlice(ev.topics[2], 12))\n      const allowance = (await token.contract.functions.allowance(this.props.inputAddress, spender)).toString()\n\n      // Filter (almost) zero-value allowances early to save bandwidth\n      if (this.formatAllowance(allowance) === '0.000') return undefined\n\n      // Retrieve the spender's ENS name if it exists\n      const ensSpender = await lookupEnsName(spender, this.props.provider)\n\n      // Retrieve the spender's app name if it exists\n      const dappListNetworkName = getDappListName(this.props.chainId)\n      const spenderAppName = await addressToAppName(spender, dappListNetworkName)\n\n      const newAllowance = '0'\n\n      return { spender, ensSpender, spenderAppName, allowance, newAllowance }\n    })))\n\n    // Filter out zero-value allowances and sort from high to low\n    allowances = allowances\n      .filter(allowance => allowance !== undefined)\n      .sort((a, b) => -1 * compareBN(a.allowance, b.allowance))\n\n    this.setState({ allowances, loading: false })\n  }\n\n  private async revoke(allowance: Allowance) {\n    this.update({ ...allowance, newAllowance: '0' })\n  }\n\n  private async update(allowance: Allowance) {\n    if (!this.props.token) return\n\n    const bnNew = BigNumber.from(this.fromFloat(allowance.newAllowance))\n    const bnOld = BigNumber.from(allowance.allowance)\n    const { contract } = this.props.token\n\n    let tx\n\n    // Not all ERC20 contracts allow for simple changes in approval to be made\n    // https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n    // So we have to do a few try-catch statements\n    // First try calling approve directly, then try increase/decreaseApproval,\n    // finally try resetting allowance to 0 and then calling approve with new value\n    try {\n      console.debug(`Calling contract.approve(${allowance.spender}, ${bnNew.toString()})`)\n      tx = await contract.functions.approve(allowance.spender, bnNew)\n    } catch (e1) {\n      console.debug(`failed, code ${e1.code}`)\n      if (e1.code === -32000) {\n        try {\n          const sub = bnOld.sub(bnNew)\n          if (sub.gte(0)) {\n            console.debug(`Calling contract.decreaseApproval(${allowance.spender}, ${sub.toString()})`)\n            tx = await contract.functions.decreaseApproval(allowance.spender, sub)\n          } else {\n            console.debug(`Calling contract.increaseApproval(${allowance.spender}, ${sub.abs().toString()})`)\n            tx = await contract.functions.increaseApproval(allowance.spender, sub.abs())\n          }\n        } catch (e2) {\n          console.debug(`failed, code ${e2.code}`)\n          if (e2.code === -32000) {\n            console.debug(`Calling contract.approve(${allowance.spender}, 0)`)\n            tx = await contract.functions.approve(allowance.spender, 0)\n            console.debug(`Calling contract.approve(${allowance.spender}, ${bnNew.toString()})`)\n            tx = await contract.functions.approve(allowance.spender, bnNew)\n          }\n        }\n      }\n    }\n\n    if (tx) {\n      await tx.wait(1)\n\n      console.debug('Reloading data')\n\n      const allowances = this.state.allowances.filter(otherAllowance => otherAllowance.spender !== allowance.spender)\n      this.setState({ allowances })\n    }\n  }\n\n  private fromFloat(s: string): string {\n    const { decimals } = this.props.token\n\n    const sides = s.split('.')\n    if (sides.length === 1) return s.padEnd(decimals + s.length, '0')\n    if (sides.length > 2) return '0'\n\n    return sides[1].length > decimals\n      ? sides[0] + sides[1].slice(0, decimals)\n      : sides[0] + sides[1].padEnd(decimals, '0')\n  }\n\n  private formatAllowance(allowance: string) {\n    const { decimals, totalSupply } = this.props.token\n\n    const allowanceBN = BigNumber.from(allowance)\n    const totalSupplyBN = BigNumber.from(totalSupply)\n\n    if (allowanceBN.gt(totalSupplyBN)) {\n      return 'Unlimited'\n    }\n\n    return toFloat(Number(allowanceBN), decimals)\n  }\n\n  render(): ReactNode {\n    const { balance, decimals } = this.props.token\n\n    // Do not render tokens without balance or allowances\n    const balanceString = toFloat(Number(balance), decimals)\n    if (balanceString === '0.000' && this.state.allowances.length === 0) return null\n\n    return (<tr className=\"Token\">{this.renderTokenOrLoading()}</tr>)\n  }\n\n  renderTokenOrLoading() {\n    if (this.state.loading) {\n      return (<ClipLoader size={20} color={'#000'} loading={this.state.loading} />)\n    }\n\n    return this.renderToken()\n  }\n\n  renderToken() {\n    return (\n      <div className=\"TokenContentDiv\">\n        <table className=\"TokenContentTable\">\n          <tbody>\n            {this.renderAllowanceList()}\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n\n  renderTokenBalance() {\n    const { symbol, balance, decimals,contract } = this.props.token\n    const explorerUrl = `${getExplorerTokenUrl(this.props.chainId)}/${contract.address}`\n    return (\n        <tr>\n          <td></td>\n          <td className=\"tokenName\"><a href={explorerUrl} style={{ color: 'white' }}>{symbol}</a></td>\n          <td className=\"tokenValue\"> {toFloat(Number(balance), decimals)}</td>\n        </tr>\n    )\n  }\n\n  renderAllowanceList() {\n\n    if (this.state.allowances.length === 0) return (\n        <tr>\n          <td className=\"tokenIconColumn\"></td>\n          <td className=\"tokenDataColumn\">\n            <table className=\"tokenDataTable\">\n              <tbody>\n                {this.renderTokenBalance()}\n                <tr className=\"spenderRow\"><td className=\"spenderRevoke\"></td><td className=\"spenderAddress\" colSpan={2}><span className=\"monospace\">No Spenders</span></td></tr>\n              </tbody>\n            </table>\n          </td>\n        </tr>\n    )\n\n    const allowances = this.state.allowances.map((allowance, i) => this.renderAllowance(allowance, i))\n    return (\n        <tr>\n          <td className=\"tokenIconColumn\"></td>\n          <td className=\"tokenDataColumn\">\n            <table className=\"tokenDataTable\">\n              <tbody>\n                {this.renderTokenBalance()}\n                {allowances}\n              </tbody>\n            </table>\n          </td>\n        </tr>\n    )\n  }\n\n  renderAllowance(allowance: Allowance, i: number) {\n      const spender = allowance.spenderAppName || allowance.ensSpender || allowance.spender\n      const shortenedSpender = allowance.spenderAppName || allowance.ensSpender || shortenAddress(allowance.spender)\n\n      const explorerBaseUrl = getExplorerUrl(this.props.chainId)\n\n      const shortenedLink = explorerBaseUrl\n        ? (<a className=\"monospace\" href={`${explorerBaseUrl}/${allowance.spender}`}>{shortenedSpender}</a>)\n        : shortenedSpender\n\n      const regularLink = explorerBaseUrl\n        ? (<a className=\"monospace\" href={`${explorerBaseUrl}/${allowance.spender}`}>{spender}</a>)\n        : spender\n\n    return (\n        <tr className=\"spenderRow\">\n          <td className=\"spenderRevoke\">\n            <Form inline className=\"Allowance\" key={allowance.spender}> {this.renderRevokeButton(allowance)}\n            </Form>\n          </td>\n          <td className=\"spenderAddress\"><span className=\"AllowanceTextBigScreen\">{regularLink}</span><span className=\"AllowanceTextSmallScreen\">{shortenedLink}</span>\n          </td>\n          <td className=\"spenderLimit\"><span className=\"monospace\"> {this.formatAllowance(allowance.allowance)}</span>\n          </td>\n        </tr>\n    )\n  }\n\n  renderRevokeButton(allowance: Allowance) {\n    const canRevoke = this.props.inputAddress === this.props.signerAddress\n\n    let revokeButton = (<Button\n      size=\"sm\" disabled={!canRevoke}\n      className=\"RevokeButton\"\n      onClick={() => this.revoke(allowance)}\n    ></Button>)\n\n    // Add tooltip if the button is disabled\n    if (!canRevoke) {\n      const tooltip = (<Tooltip id={`revoke-tooltip-${this.props.token.contract.address}`}>You can only revoke allowances of the connected account</Tooltip>)\n      revokeButton = (<OverlayTrigger overlay={tooltip}><td><span>{revokeButton}</span></td></OverlayTrigger>)\n    }\n\n    return revokeButton\n  }\n\n  renderUpdateInputGroup(allowance: Allowance, i: number) {\n    const canUpdate = this.props.inputAddress === this.props.signerAddress\n\n    let updateGroup = (<InputGroup size=\"sm\">\n      <Form.Control type=\"text\" size=\"sm\"\n        className=\"NewAllowance\"\n        value={this.state.allowances[i].newAllowance}\n        onChange={(event) => {\n          const updatedAllowances = this.state.allowances.slice()\n          updatedAllowances[i] = { ...allowance, newAllowance: event.target.value }\n          this.setState({ allowances: updatedAllowances })\n        }}/>\n      <InputGroup.Append>\n      <Button disabled={!canUpdate} className=\"UpdateButton\" onClick={() => this.update(allowance)}>Update</Button>\n      </InputGroup.Append>\n    </InputGroup>)\n\n    // Add tooltip if the button is disabled\n    if (!canUpdate) {\n      const tooltip = (<Tooltip id={`update-tooltip-${this.props.token.contract.address}`}>You can only update allowances of the connected account</Tooltip>)\n      updateGroup = (<OverlayTrigger overlay={tooltip}><span>{updateGroup}</span></OverlayTrigger>)\n    }\n\n    return updateGroup\n  }\n}\n\nexport default Erc20Token\n","import { Contract } from 'ethers'\nimport { getAddress } from 'ethers/lib/utils'\nimport { TokenMapping } from '../common/interfaces'\n\nexport async function getTokenData(contract: Contract, ownerAddress: string, tokenMapping: TokenMapping = {}) {\n  // Retrieve total supply and user balance from Infura\n  const totalSupply = (await contract.functions.totalSupply()).toString()\n  const balance = await contract.functions.balanceOf(ownerAddress)\n\n  const tokenData = tokenMapping[getAddress(contract.address)]\n\n  if (tokenData && tokenData.symbol && tokenData.decimals) {\n    // Retrieve info from the token mapping if available\n    const { symbol, decimals } = tokenData\n    return { symbol, decimals, totalSupply, balance }\n  } else {\n    // If the token is not available in the token mapping, retrieve the info from Infura\n    const symbol = await contract.symbol()\n    const decimals = await contract.functions.decimals()\n    return { symbol, decimals, totalSupply, balance }\n  }\n}\n","import { Signer, Contract, providers } from 'ethers'\nimport { Interface, getAddress, hexZeroPad } from 'ethers/lib/utils'\nimport React, { Component } from 'react'\nimport ClipLoader from 'react-spinners/ClipLoader'\nimport { Erc20TokenData, TokenMapping } from '../common/interfaces'\nimport Erc20Token from './Erc20Token'\nimport { isRegistered, getTokenIcon, toFloat } from '../common/util'\nimport { getTokenData } from './util'\nimport { ERC20 } from '../common/abis'\n\ntype Props = {\n  provider: providers.Provider\n  chainId: number,\n  filterRegisteredTokens: boolean\n  filterZeroBalances: boolean\n  tokenMapping?: TokenMapping\n  signer?: Signer\n  signerAddress?: string\n  inputAddress?: string\n}\n\ntype State = {\n  tokens: Erc20TokenData[]\n  loading: boolean\n}\n\nclass Erc20TokenList extends Component<Props, State> {\n  state: State = {\n    tokens: [],\n    loading: true,\n  }\n\n  componentDidMount() {\n    this.loadData()\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.inputAddress === prevProps.inputAddress) return\n    this.loadData()\n  }\n\n  async loadData() {\n    if (!this.props.inputAddress) return\n\n    // Reset existing state after update\n    this.setState({ tokens: [], loading: true })\n\n    const erc20Interface = new Interface(ERC20)\n    const signerOrProvider = this.props.signer || this.props.provider\n\n    const latestBlockNumber = await this.props.provider.getBlockNumber();\n\n    // Get all approvals made from the input address\n    const approvals = await this.props.provider.getLogs({\n      fromBlock: 0,\n      toBlock: latestBlockNumber,\n      topics: [erc20Interface.getEventTopic('Approval'), hexZeroPad(this.props.inputAddress, 32)]\n    })\n\n    // Get all transfers sent to the input address\n    const transfers = await this.props.provider.getLogs({\n      fromBlock: 0,\n      toBlock: latestBlockNumber,\n      topics: [erc20Interface.getEventTopic('Transfer'), undefined, hexZeroPad(this.props.inputAddress, 32)]\n    })\n\n    const allEvents = [...approvals, ...transfers];\n\n    // Filter unique token contract addresses and convert all events to Contract instances\n    const tokenContracts = allEvents\n      .filter((event, i) => i === allEvents.findIndex((other) => event.address === other.address))\n      .map((event) => new Contract(getAddress(event.address), ERC20, signerOrProvider))\n\n    // Return early if no tokens are found\n    if (tokenContracts.length === 0) {\n      this.setState({ loading: false })\n      return\n    }\n\n    // Look up token data for all tokens, add their list of approvals,\n    // and check if the token is registered in Kleros T2CR\n    const unsortedTokens = await Promise.all(\n      tokenContracts.map(async (contract) => {\n        const tokenApprovals = approvals.filter(approval => approval.address === contract.address)\n        const registered = await isRegistered(contract.address, this.props.provider, this.props.tokenMapping)\n        const icon = await getTokenIcon(contract.address, this.props.chainId, this.props.tokenMapping)\n\n        try {\n          const tokenData = await getTokenData(contract, this.props.inputAddress, this.props.tokenMapping)\n          return { ...tokenData, icon, contract, registered, approvals: tokenApprovals }\n        } catch {\n          // If the call to getTokenData() fails, the token is not an ERC20 token so\n          // we do not include it in the token list (should not happen).\n          return undefined\n        }\n      })\n    )\n\n    // Filter undefined tokens and sort tokens alphabetically on token symbol\n    const tokens = unsortedTokens\n      .filter((token) => token !== undefined)\n      .sort((a: any, b: any) => a.symbol.localeCompare(b.symbol))\n\n    this.setState({ tokens, loading: false })\n  }\n\n  render() {\n    if (this.state.loading) {\n      return (<ClipLoader css=\"margin-bottom: 10px;\" size={40} color={'#000'} loading={this.state.loading} />)\n    }\n\n    if (this.state.tokens.length === 0) {\n      return (<div className=\"TokenList\">No token balances</div>)\n    }\n\n    const tokenComponents = this.state.tokens\n      .filter((token) => !this.props.filterRegisteredTokens || token.registered)\n      .filter((token) => !this.props.filterZeroBalances || !(toFloat(Number(token.balance), token.decimals) === '0.000'))\n      .map((token) => (\n        <Erc20Token\n          key={token.contract.address}\n          token={token}\n          provider={this.props.provider}\n          chainId={this.props.chainId}\n          signer={this.props.signer}\n          signerAddress={this.props.signerAddress}\n          inputAddress={this.props.inputAddress}\n        />\n      ))\n\n    return (<table className=\"TokenList\"><tbody>{tokenComponents}</tbody></table>)\n  }\n}\n\nexport default Erc20TokenList\n","import { Contract, providers } from 'ethers'\nimport { getAddress } from 'ethers/lib/utils'\nimport { OPENSEA_REGISTRY } from '../common/abis'\nimport { ADDRESS_ZERO, DUMMY_ADDRESS, OPENSEA_REGISTRY_ADDRESS } from '../common/constants'\nimport { TokenMapping } from '../common/interfaces'\nimport { addressToAppName as addressToAppNameBase } from '../common/util'\n\nexport async function getTokenData(contract: Contract, ownerAddress: string, tokenMapping: TokenMapping = {}) {\n  await throwIfNotErc721(contract)\n\n  const balance = await contract.functions.balanceOf(ownerAddress)\n  const tokenData = tokenMapping[getAddress(contract.address)]\n\n  if (tokenData && tokenData.name) {\n    // Retrieve info from the token mapping if available\n    const { name } = tokenData\n    return { balance, symbol: name }\n  } else {\n    // Wrap this in a try-catch since not every NFT has a name\n    try {\n      // If the token is not available in the token mapping, retrieve the info from Infura\n      const [symbol] = await contract.functions.name()\n      return { balance, symbol }\n    } catch (e) {\n      const symbol = '???'\n      return { balance, symbol }\n    }\n  }\n}\n\nexport async function addressToAppName(address: string, networkName?: string, openseaProxyAddress?: string): Promise<string | undefined> {\n  if (address === openseaProxyAddress) return 'OpenSea'\n  return addressToAppNameBase(address, networkName)\n}\n\nexport async function getOpenSeaProxyAddress(userAddress: string, provider: providers.Provider): Promise<string | undefined> {\n  try {\n    const contract = new Contract(OPENSEA_REGISTRY_ADDRESS, OPENSEA_REGISTRY, provider)\n    const [proxyAddress] = await contract.functions.proxies(userAddress)\n    if (!proxyAddress || proxyAddress === ADDRESS_ZERO) return undefined\n    return proxyAddress\n  } catch {\n    return undefined\n  }\n}\n\nasync function throwIfNotErc721(contract: Contract) {\n  // If the function isApprovedForAll does not exist it will throw (and is not ERC721)\n  const [isApprovedForAll] = await contract.functions.isApprovedForAll(ADDRESS_ZERO, DUMMY_ADDRESS)\n\n  console.log(contract.address, isApprovedForAll)\n\n  // The only acceptable value for checking whether 0x00...00 has an allowance set to 0x00...01 is false\n  // This could happen when the contract is not ERC721 but does have a fallback function\n  if (isApprovedForAll !== false) {\n    throw new Error('Response to isApprovedForAll was not false, indicating that this is not an ERC721 contract')\n  }\n}\n","import { Signer, providers, BigNumber } from 'ethers'\nimport { getAddress, hexDataSlice } from 'ethers/lib/utils'\nimport React, { Component, ReactNode } from 'react'\nimport ClipLoader from 'react-spinners/ClipLoader'\nimport { Erc721TokenData } from '../common/interfaces'\nimport { shortenAddress, getDappListName, getExplorerUrl, lookupEnsName } from '../common/util'\nimport { Button, Form, OverlayTrigger, Tooltip } from 'react-bootstrap'\nimport { ADDRESS_ZERO } from '../common/constants'\nimport { addressToAppName } from './util'\n\n// TODO: Detect OpenSea Shared Storefront NFTs\n\ntype Props = {\n  provider: providers.Provider\n  chainId: number\n  signer?: Signer\n  token: Erc721TokenData\n  signerAddress: string\n  inputAddress: string\n  openSeaProxyAddress?: string\n}\n\ntype State = {\n  allowances: Allowance[]\n  icon?: string\n  loading: boolean\n}\n\ntype Allowance = {\n  spender: string\n  ensSpender?: string\n  spenderAppName?: string\n  index?: BigNumber\n}\n\nclass Erc721Token extends Component<Props, State> {\n  state: State = {\n    allowances: [],\n    loading: true,\n  }\n\n  componentDidMount() {\n    this.loadData()\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.inputAddress === prevProps.inputAddress) return\n    this.loadData()\n  }\n\n  private async loadData() {\n    if (!this.props.token) return\n    if (!this.props.inputAddress) return\n\n    const { token } = this.props\n\n    // Filter out duplicate indices\n    const approvals = token.approvals\n      .filter((approval, i) => i === token.approvals.findIndex(other => approval.topics[3] === other.topics[3]))\n\n    // Filter out duplicate spenders\n    const approvalsForAll = token.approvalsForAll\n      .filter((approval, i) => i === token.approvalsForAll.findIndex(other => approval.topics[2] === other.topics[2]))\n\n    // Retrieve current allowance for these ApprovalForAll events\n    const unlimitedAllowances: Allowance[] = (await Promise.all(approvalsForAll.map(async (ev) => {\n      const spender = getAddress(hexDataSlice(ev.topics[2], 12))\n\n      const [isApprovedForAll] = await token.contract.functions.isApprovedForAll(this.props.inputAddress, spender)\n      if (!isApprovedForAll) return undefined\n\n      // Retrieve the spender's ENS name if it exists\n      const ensSpender = await lookupEnsName(spender, this.props.provider)\n\n      // Retrieve the spender's app name if it exists\n      const dappListNetworkName = getDappListName(this.props.chainId)\n      const spenderAppName = await addressToAppName(spender, dappListNetworkName, this.props.openSeaProxyAddress)\n\n      return { spender, ensSpender, spenderAppName }\n    })))\n\n    // Retrieve current allowance for these Approval events\n    const limitedAllowances: Allowance[] = (await Promise.all(approvals.map(async (ev) => {\n      // Wrap this in a try-catch since it's possible the NFT has been burned\n      try {\n        // Some contracts (like CryptoStrikers) may not implement ERC721 correctly\n        // by making tokenId a non-indexed parameter, in which case it needs to be\n        // taken from the event data rather than topics\n        const index = ev.topics.length === 4\n          ? BigNumber.from(ev.topics[3])\n          : BigNumber.from(ev.data)\n\n        const [spender] = await token.contract.functions.getApproved(index)\n        if (spender === ADDRESS_ZERO) return undefined\n\n        // Retrieve the spender's ENS name if it exists\n        const ensSpender = await lookupEnsName(spender, this.props.provider)\n\n        // Retrieve the spender's app name if it exists\n        const dappListNetworkName = getDappListName(this.props.chainId)\n        const spenderAppName = await addressToAppName(spender, dappListNetworkName, this.props.openSeaProxyAddress)\n\n        return { spender, ensSpender, spenderAppName, index }\n      } catch {\n        return undefined\n      }\n    })))\n\n    // Filter out undefined allowances\n    // TODO: Sort by index\n    const allowances = [...limitedAllowances, ...unlimitedAllowances]\n      .filter(allowance => allowance !== undefined)\n\n    this.setState({ allowances, loading: false })\n  }\n\n  private async revoke(allowance: Allowance) {\n    if (!this.props.token) return\n\n    const { contract } = this.props.token\n\n    let tx\n\n    if (allowance.index === undefined) {\n      tx = await contract.functions.setApprovalForAll(allowance.spender, false)\n    } else {\n      tx = await contract.functions.approve(ADDRESS_ZERO, allowance.index)\n    }\n\n    if (tx) {\n      await tx.wait(1)\n\n      console.debug('Reloading data')\n\n      const allowanceEquals = (a: Allowance, b: Allowance) => {\n        if (a.spender !== b.spender) return false\n        if (a.index === undefined && b.index === undefined) return true\n        return String(a.index) === String(b.index)\n      }\n\n      const allowances = this.state.allowances\n        .filter(otherAllowance => !allowanceEquals(otherAllowance, allowance))\n\n      this.setState({ allowances })\n    }\n  }\n\n  private formatAllowance(index?: BigNumber) {\n    if (!index) return 'all tokens'\n    return `token ID ${String(index)}`\n  }\n\n  render(): ReactNode {\n    const { balance } = this.props.token\n\n    // // Do not render tokens without balance or allowances\n    const balanceString = String(balance)\n    if (balanceString === '0' && this.state.allowances.length === 0) return null\n\n    return (<tr className=\"Token\">{this.renderTokenOrLoading()}</tr>)\n  }\n\n  renderTokenOrLoading() {\n    if (this.state.loading) {\n      return (<ClipLoader size={20} color={'#000'} loading={this.state.loading} />)\n    }\n\n    return this.renderToken()\n  }\n\n  renderToken() {\n    return (\n      <div className=\"TokenContentDiv\">\n        <table className=\"TokenContentTable\">\n          <tbody>\n        {this.renderAllowanceList()}\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n\n  renderTokenBalance() {\n    const { symbol, balance, contract } = this.props.token\n\n\n    const explorerUrl = `${getExplorerUrl(this.props.chainId)}/${contract.address}`\n    return (\n    \t<tr>\n    \t\t <td></td>\n    \t\t <td className=\"tokenName\">\n    \t\t   <a href={explorerUrl} style={{ color: 'white' }}>{symbol}</a>\n    \t\t </td>\n    \t\t <td className=\"tokenValue\">\n    \t\t   {String(balance)}\n    \t\t </td>\n    \t</tr>\n    )\n  }\n\n  renderAllowanceList() {\n\n  \tconst backupImage = (ev) => { (ev.target as HTMLImageElement).src = 'erc721.png'}\n    const img = (<img src={this.props.token.icon} alt=\"\" width=\"40px\" onError={backupImage} />)\n\n    if (this.state.allowances.length === 0) return (\n      <tr>\n          <td className=\"tokenIconColumn721\"></td>\n          <td className=\"tokenDataColumn\">\n            <table className=\"tokenDataTable\">\n              <tbody>\n                {this.renderTokenBalance()}\n                <tr className=\"spenderRow\"><td className=\"spenderRevoke\"></td><td className=\"spenderAddress\" colSpan={2}><span className=\"monospace\">No Spenders</span></td></tr>\n              </tbody>\n            </table>\n          </td>\n     </tr>\n    )\n\n    const allowances = this.state.allowances.map((allowance, i) => this.renderAllowance(allowance, i))\n    return (\n        <tr>\n          <td className=\"tokenIconColumn\"></td>\n          <td className=\"tokenDataColumn\">\n            <table className=\"tokenDataTable\">\n              <tbody>\n                {this.renderTokenBalance()}\n                {allowances}\n              </tbody>\n            </table>\n          </td>\n        </tr>\n    )\n  }\n\n  renderAllowance(allowance: Allowance, i: number) {\n      const spender = allowance.spenderAppName || allowance.ensSpender || allowance.spender\n      const shortenedSpender = allowance.spenderAppName || allowance.ensSpender || shortenAddress(allowance.spender)\n\n      const explorerBaseUrl = getExplorerUrl(this.props.chainId)\n\n      const shortenedLink = explorerBaseUrl\n        ? (<a className=\"monospace\" href={`${explorerBaseUrl}/${allowance.spender}`}>{shortenedSpender}</a>)\n        : shortenedSpender\n\n      const regularLink = explorerBaseUrl\n        ? (<a className=\"monospace\" href={`${explorerBaseUrl}/${allowance.spender}`}>{spender}</a>)\n        : spender\n\n\treturn (\n        <tr className=\"spenderRow\">\n\t  \t  <td className=\"spenderRevoke\">\n\t\t\t<Form inline className=\"Allowance\" key={allowance.spender}> {this.renderRevokeButton(allowance)}\n\t\t\t</Form>\n\t  \t  </td>\n\t  \t  <td className=\"spenderAddress\"><span className=\"AllowanceTextBigScreen\">{regularLink}</span><span className=\"AllowanceTextSmallScreen\">{shortenedLink}</span>\n\t  \t  </td>\n\t  \t  <td className=\"spenderLimit\"><span className=\"monospace\"> {this.renderAllowanceText(allowance)}</span>\n\t      </td>\n        </tr>\n    )\n  }\n\n  renderAllowanceText(allowance: Allowance) {\n    const spender = allowance.spenderAppName || allowance.ensSpender || allowance.spender\n    const shortenedSpender = allowance.spenderAppName || allowance.ensSpender || shortenAddress(allowance.spender)\n\n    const explorerBaseUrl = getExplorerUrl(this.props.chainId)\n\n    const shortenedLink = explorerBaseUrl\n      ? (<a className=\"monospace\" href={`${explorerBaseUrl}/${allowance.spender}`}>{shortenedSpender}</a>)\n      : shortenedSpender\n\n    const regularLink = explorerBaseUrl\n      ? (<a className=\"monospace\" href={`${explorerBaseUrl}/${allowance.spender}`}>{spender}</a>)\n      : spender\n\n    // Display separate spans for the regular and shortened versions of the spender address\n    // The correct one is selected using CSS media-queries\n    return (\n      <div>\n      <span className=\"AllowanceTextSmallScreen\">{shortenedLink}</span>\n      <span className=\"AllowanceTextSmallScreen\"> {this.formatAllowance(allowance.index)} ➤ </span>\n\n\t  <span className=\"AllowanceTextBigScreen\">{regularLink}</span>\n      <span className=\"AllowanceTextBigScreen\"> {this.formatAllowance(allowance.index)} ➤ </span>\n\n      </div>\n    )\n  }\n\n  renderRevokeButton(allowance: Allowance) {\n    const canRevoke = this.props.inputAddress === this.props.signerAddress\n\n    let revokeButton = (<Button\n      size=\"sm\" disabled={!canRevoke}\n      className=\"RevokeButton\"\n      onClick={() => this.revoke(allowance)}\n    ></Button>)\n\n    // Add tooltip if the button is disabled\n    if (!canRevoke) {\n      const tooltip = (<Tooltip id={`revoke-tooltip-${this.props.token.contract.address}`}>You can only revoke allowances of the connected account</Tooltip>)\n      revokeButton = (<OverlayTrigger overlay={tooltip}><td><span>{revokeButton}</span></td></OverlayTrigger>)\n    }\n\n    return revokeButton\n  }\n}\n\nexport default Erc721Token\n","import { Signer, Contract, providers } from 'ethers'\nimport { Interface, getAddress, hexZeroPad } from 'ethers/lib/utils'\nimport React, { Component } from 'react'\nimport ClipLoader from 'react-spinners/ClipLoader'\nimport { Erc721TokenData, TokenMapping } from '../common/interfaces'\nimport Erc721Token from './Erc721Token'\nimport { getTokenIcon } from '../common/util'\nimport { getOpenSeaProxyAddress, getTokenData } from './util'\nimport { ERC721Metadata } from '../common/abis'\n\ntype Props = {\n  provider: providers.Provider\n  chainId: number,\n  filterRegisteredTokens: boolean\n  filterZeroBalances: boolean\n  tokenMapping?: TokenMapping\n  signer?: Signer\n  signerAddress?: string\n  inputAddress?: string\n}\n\ntype State = {\n  tokens: Erc721TokenData[]\n  loading: boolean\n  openSeaProxyAddress?: string\n}\n\nclass Erc721TokenList extends Component<Props, State> {\n  state: State = {\n    tokens: [],\n    loading: true,\n  }\n\n  componentDidMount() {\n    this.loadData()\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.inputAddress === prevProps.inputAddress) return\n    this.loadData()\n  }\n\n  async loadData() {\n    if (!this.props.inputAddress) return\n\n    // Reset existing state after update\n    this.setState({ tokens: [], loading: true })\n\n    const erc721Interface = new Interface(ERC721Metadata)\n    const signerOrProvider = this.props.signer || this.props.provider\n\n    // Get all \"approvals for a specific index\" made from the input address\n    const approvals = await this.props.provider.getLogs({\n      fromBlock: 'earliest',\n      toBlock: 'latest',\n      topics: [erc721Interface.getEventTopic('Approval'), hexZeroPad(this.props.inputAddress, 32)]\n    })\n\n    // Get all \"approvals for all indexes\" made from the input address\n    const approvalsForAll = await this.props.provider.getLogs({\n      fromBlock: 'earliest',\n      toBlock: 'latest',\n      topics: [erc721Interface.getEventTopic('ApprovalForAll'), hexZeroPad(this.props.inputAddress, 32)]\n    })\n\n    // Get all transfers sent to the input address\n    const transfers = await this.props.provider.getLogs({\n      fromBlock: 'earliest',\n      toBlock: 'latest',\n      topics: [erc721Interface.getEventTopic('Transfer'), undefined, hexZeroPad(this.props.inputAddress, 32)]\n    })\n\n    const allEvents = [...approvals, ...approvalsForAll, ...transfers];\n\n    // Filter unique token contract addresses and convert all events to Contract instances\n    const tokenContracts = allEvents\n      .filter((event, i) => i === allEvents.findIndex((other) => event.address === other.address))\n      .map((event) => new Contract(getAddress(event.address), ERC721Metadata, signerOrProvider))\n\n    // Return early if no tokens are found\n    if (tokenContracts.length === 0) {\n      this.setState({ loading: false })\n      return\n    }\n\n    // Look up token data for all tokens, add their lists of approvals\n    const unsortedTokens = await Promise.all(\n      tokenContracts.map(async (contract) => {\n        const tokenApprovalsForAll = approvalsForAll.filter(approval => approval.address === contract.address)\n        const tokenApprovals = approvals.filter(approval => approval.address === contract.address)\n        const icon = await getTokenIcon(contract.address, this.props.chainId, this.props.tokenMapping)\n\n        // Skip registration checks for NFTs\n        const registered = true\n\n        try {\n          const tokenData = await getTokenData(contract, this.props.inputAddress, this.props.tokenMapping)\n          return { ...tokenData, icon, contract, registered, approvals: tokenApprovals, approvalsForAll: tokenApprovalsForAll }\n        } catch {\n          // If the call to getTokenData() fails, the token is not an ERC721 token so\n          // we do not include it in the token list.\n          return undefined\n        }\n      })\n    )\n\n    // Filter undefined tokens and sort tokens alphabetically on token symbol\n    const tokens = unsortedTokens\n      .filter((token) => token !== undefined)\n      .sort((a: any, b: any) => a.symbol.localeCompare(b.symbol))\n\n    const openSeaProxyAddress = await getOpenSeaProxyAddress(this.props.inputAddress, this.props.provider)\n\n    this.setState({ openSeaProxyAddress, tokens, loading: false })\n  }\n\n  render() {\n    if (this.state.loading) {\n      return (<ClipLoader css=\"margin-bottom: 10px;\" size={40} color={'#000'} loading={this.state.loading} />)\n    }\n\n    if (this.state.tokens.length === 0) {\n      return (<div className=\"TokenList\">No token balances</div>)\n    }\n\n    const tokenComponents = this.state.tokens\n      .filter((token) => !this.props.filterRegisteredTokens || token.registered)\n      .filter((token) => !this.props.filterZeroBalances || ! (String(token.balance) === '0'))\n      .map((token) => (\n        <Erc721Token\n          key={token.contract.address}\n          token={token}\n          provider={this.props.provider}\n          chainId={this.props.chainId}\n          signer={this.props.signer}\n          signerAddress={this.props.signerAddress}\n          inputAddress={this.props.inputAddress}\n          openSeaProxyAddress={this.state.openSeaProxyAddress}\n        />\n      ))\n\n    return (<table className=\"TokenList\"><tbody>{tokenComponents}</tbody></table>)\n  }\n}\n\nexport default Erc721TokenList\n","import { Signer, providers } from 'ethers'\nimport React, { Component, ReactNode, ChangeEvent } from 'react'\nimport BootstrapSwitchButton from 'bootstrap-switch-button-react'\nimport { TokenMapping, TokenStandard } from './common/interfaces'\nimport { getFullTokenMapping, isSupportedNetwork } from './common/util'\nimport Erc20TokenList from './ERC20/Erc20TokenList'\nimport Erc721TokenList from './ERC721/Erc721TokenList'\n\ntype Props = {\n  provider: providers.Provider\n  chainId: number,\n  signer?: Signer\n  signerAddress?: string\n  inputAddress?: string\n}\n\ntype State = {\n  filterRegisteredTokens: boolean\n  filterZeroBalances: boolean\n  tokenStandard: TokenStandard\n  loading: boolean\n  tokenMapping?: TokenMapping\n}\n\nclass Dashboard extends Component<Props, State> {\n  state: State = {\n    tokenStandard: 'ERC20',\n    filterRegisteredTokens: true,\n    filterZeroBalances: false,\n    loading: true,\n  }\n\n  componentDidMount() {\n    this.loadData()\n  }\n\n  async loadData() {\n    const tokenMapping = await getFullTokenMapping(this.props.chainId)\n    this.setState({ tokenMapping, loading: false })\n  }\n\n  handleRegisteredCheckboxChange = (event: ChangeEvent<HTMLInputElement>) =>\n    this.setState({ filterRegisteredTokens: event.target.checked })\n\n  handleZeroBalancesCheckboxChange = (event: ChangeEvent<HTMLInputElement>) =>\n    this.setState({ filterZeroBalances: event.target.checked })\n\n  render(): ReactNode {\n    if (!isSupportedNetwork(this.props.chainId)) {\n      return (\n        <div style={{ paddingBottom: 10 }}>\n          Network with chainId {this.props.chainId} is not supported`\n        </div>\n      )\n    }\n\n    return (\n      <div className=\"Dashboard\">\n      <div className=\"controlDiv\">\n        <div className=\"checkSwitches\">\n            {this.renderSelectionSwitch()}\n        </div>\n        <div className=\"registrationCheckbox\">\n            {this.renderRegistrationCheckbox()}\n        </div>\n      </div>\n      {this.renderErc20TokenList()}\n      </div>\n    )\n  }\n\n  renderSelectionSwitch() {\n    return (\n      <div className=\"tokenSwitch\" style={{ marginBottom: '10px' }}>\n        <BootstrapSwitchButton\n          checked={this.state.tokenStandard === 'ERC20'}\n          onlabel='MRC20'\n          offlabel='MRC721'\n          onstyle=\"primary\"\n          offstyle=\"primary\"\n          width={100}\n          onChange={(checked: boolean) => this.updateTokenStandard(checked)}\n        />\n      </div>\n    )\n  }\n\n  updateTokenStandard(checked: boolean) {\n    if (checked) {\n      this.setState({ tokenStandard: 'ERC20' })\n    } else {\n      this.setState({ tokenStandard: 'ERC721' })\n    }\n  }\n\n  renderRegistrationCheckbox() {\n    // Don't check registration for NFTs\n    if (this.state.tokenStandard === 'ERC721') return;\n\n    // If no token data mapping is found and we're not on ETH, we hide the checkbox\n    if (!this.state.tokenMapping && this.props.chainId !== 1) return\n\n    // Link to Kleros T2CR for Ethereum or tokenlists for other chains\n    const infoLink = this.props.chainId === 1\n      ? 'https://tokens.kleros.io/tokens'\n      : 'https://tokenlists.org/'\n\n    return (\n      <div>\n        Filter out unregistered tokens\n        <sup><a href={infoLink} target=\"_blank\" rel=\"noopener noreferrer\">?</a></sup>\n        <input type=\"checkbox\" checked={this.state.filterRegisteredTokens} onChange={this.handleRegisteredCheckboxChange} />\n      </div>\n    )\n  }\n\n  renderZeroBalancesCheckbox() {\n    return (\n      <div className=\"zeroBalances\">\n        <span style={{ marginRight: 5 }}>Filter out zero balances</span>\n        <input type=\"checkbox\" checked={this.state.filterZeroBalances} onChange={this.handleZeroBalancesCheckboxChange} />\n      </div>\n    )\n  }\n\n  renderErc20TokenList() {\n    if (!this.props.inputAddress || this.state.loading) {\n      return null;\n    }\n\n    if (this.state.tokenStandard === 'ERC20') {\n      return (\n        <Erc20TokenList\n          provider={this.props.provider}\n          chainId={this.props.chainId}\n          signer={this.props.signer}\n          signerAddress={this.props.signerAddress}\n          inputAddress={this.props.inputAddress}\n          filterRegisteredTokens={this.state.filterRegisteredTokens}\n          filterZeroBalances={this.state.filterZeroBalances}\n          tokenMapping={this.state.tokenMapping}\n        />\n      );\n    } else {\n      return (\n        <Erc721TokenList\n          provider={this.props.provider}\n          chainId={this.props.chainId}\n          signer={this.props.signer}\n          signerAddress={this.props.signerAddress}\n          inputAddress={this.props.inputAddress}\n          filterRegisteredTokens={this.state.filterRegisteredTokens}\n          filterZeroBalances={this.state.filterZeroBalances}\n          tokenMapping={this.state.tokenMapping}\n        />\n      );\n    }\n  }\n}\n\nexport default Dashboard\n","import '../App.scss'\nimport { Signer, utils } from 'ethers'\nimport React, { useState } from 'react'\nimport { Button, Form, InputGroup, Modal } from 'react-bootstrap'\nimport { toast } from 'react-toastify'\nimport { getNativeToken, getDefaultAmount } from './util'\n\ntype Props = {\n  signer: Signer,\n  chainId: number,\n}\n\nconst DonateButton: React.FC<Props> = ({ signer, chainId }) => {\n  const nativeToken = getNativeToken(chainId)\n\n  const [amount, setAmount] = useState<string>(getDefaultAmount(nativeToken))\n\n  const [show, setShow] = useState<boolean>(false)\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n\n  const sendDonation = async () => {\n    if (!signer) {\n      alert('Please connect your web3 wallet to donate')\n    }\n\n    try {\n      await signer.sendTransaction({\n        to: '0xe126b3E5d052f1F575828f61fEBA4f4f2603652a',\n        from: await signer.getAddress(),\n        value: utils.parseEther(amount),\n      })\n\n      toast.dark('Thanks for the donation!', {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      })\n\n      setShow(false);\n    } catch (err) {\n      if (err.code && err.code === 'INVALID_ARGUMENT') {\n        alert('Input is not a valid number')\n      }\n\n      console.log(err)\n    }\n  }\n\n  return (\n    <>\n      <Button variant=\"outline-primary\" onClick={handleShow}>Donate</Button>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Donate to Revoke.cash</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          <InputGroup>\n            <Form.Control\n              value={amount}\n              onChange={(event) => (setAmount(event.target.value))}\n            />\n            <InputGroup.Append>\n              <InputGroup.Text>{nativeToken}</InputGroup.Text>\n            </InputGroup.Append>\n            <InputGroup.Append>\n              <Button variant=\"secondary\" onClick={sendDonation}>Send</Button>\n            </InputGroup.Append>\n          </InputGroup>\n        </Modal.Body>\n\n        <Modal.Footer>\n          Or contribute to my <a href=\"https://gitcoin.co/grants/259/rosco-kalis-crypto-software-engineer\">Gitcoin Grant</a>\n        </Modal.Footer>\n      </Modal>\n    </>\n  )\n}\n\nexport default DonateButton\n","export function getNativeToken(chainId: number): string {\n  const alternatives = {\n    30: 'RBTC',\n    56: 'BNB',\n    97: 'BNB',\n    99: 'POA',\n    100: 'xDAI',\n    137: 'MATIC',\n    10000: 'BCH',\n    43113: 'AVAX',\n    43114: 'AVAX',\n    80001: 'MATIC',\n  }\n\n  return alternatives[chainId] || 'ETH'\n}\n\nexport function getDefaultAmount(nativeToken: string): string {\n  const mapping = {\n    'ETH': '0.01',\n    'RBTC': '0.0002',\n    'BCH': '0.02',\n    'BNB': '0.2',\n    'POA': '300',\n    'xDAI': '10',\n    'MATIC': '150',\n    'AVAX': '0.25'\n  }\n\n  return mapping[nativeToken]\n}\n","import './App.scss'\nimport axios from 'axios'\nimport { Signer, providers } from 'ethers'\nimport { getAddress } from 'ethers/lib/utils'\nimport React, { Component, ReactNode, ChangeEvent } from 'react'\nimport Dashboard from './Dashboard'\nimport DonateButton from './DonateButton/DonateButton'\nimport { Button, Form, Container, Row, Col } from 'react-bootstrap'\nimport { lookupEnsName, shortenAddress } from './common/util'\nimport { displayGitcoinToast } from './common/gitcoin-toast';\nimport { ToastContainer } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\n\ndeclare let window: {\n  ethereum?: any\n  web3?: any\n  location: any\n}\n\ntype State = {\n  provider?: providers.Provider,\n  signer?: Signer,\n  chainId?: number,\n  signerAddress?: string,\n  signerEnsName?: string,\n  inputAddressOrName?: string,\n  inputAddress?: string,\n  showDonateModal: boolean,\n}\n\nclass App extends Component<{}, State> {\n  state: State = {\n    showDonateModal: false,\n  }\n\n  async componentDidMount() {\n    await this.connectProvider()\n\n    // Connect with Web3 provider for WRITE operations if access is already granted\n    if (window.ethereum || window.web3) {\n      try {\n        // Check if access is granted\n        await this.connectSigner()\n      } catch {} // ignored\n    }\n\n    // Refresh the page when changing the network in Metamask\n    if (window.ethereum) {\n      window.ethereum.on('chainChanged', () => window.location.reload(false))\n      window.ethereum.on('accountsChanged', () => window.location.reload(false))\n    }\n\n    displayGitcoinToast();\n  }\n\n  async connectWeb3() {\n    if (window.ethereum) {\n      try {\n        // Request account access if needed\n        await window.ethereum.request({ method: 'eth_requestAccounts' })\n      } catch {\n        // User denied account access...\n        return\n      }\n    }\n\n    await this.connectSigner()\n  }\n\n  async connectProvider() {\n    if (window.ethereum) {\n      const provider = new providers.Web3Provider(window.ethereum)\n      await this.updateProvider(provider)\n      console.log('Using injected \"window.ethereum\" provider')\n    } else if (window.web3 && window.web3.currentProvider) {\n      const provider = new providers.Web3Provider(window.web3.currentProvider)\n      await this.updateProvider(provider)\n      console.log('Using injected \"window.web3\" provider')\n    } else {\n      try {\n        // Use a default provider with a free Infura key if web3 is not available\n        const provider = new providers.InfuraProvider('mainnet', `${'88583771d63544aa'}${'ba1006382275c6f8'}`)\n\n        // Check that the provider is available (and not rate-limited) by sending a dummy request\n        const dummyRequest = '{\"method\":\"eth_getCode\",\"params\":[\"0x1f9840a85d5af5bf1d1762f925bdaddc4201f984\",\"latest\"],\"id\":0,\"jsonrpc\":\"2.0\"}'\n        await axios.post(provider.connection.url, dummyRequest)\n        await this.updateProvider(provider)\n        console.log('Using fallback Infura provider')\n      } catch {\n        console.log('No web3 provider available')\n      }\n    }\n  }\n\n  async updateProvider(provider: providers.Provider) {\n    const { chainId } = await provider.getNetwork()\n\n    // Add a hacky patch to make sure that for Matic we talk to this RPC endpoint\n    // regardless of what is configured in MM since the Matic Vigil endpoint has limited\n    // historic logs.\n    // TODO: Do this in a non-hacky way later\n    if (chainId === 137) {\n      provider = new providers.WebSocketProvider('wss://rpc-mainnet.matic.quiknode.pro');\n    }\n\n    this.setState({ provider, chainId })\n  }\n\n  async connectSigner() {\n    if (!window.ethereum && !window.web3) {\n      alert('Please use a web3 enabled browser to use mtv.revoke')\n      return\n    }\n\n    // Retrieve signer from injected provider\n    const injectedProvider = window.ethereum ?? window.web3.currentProvider\n    const provider = new providers.Web3Provider(injectedProvider)\n    const signer = provider.getSigner()\n\n    // Retrieve signer address and ENS name\n    const signerAddress = await signer.getAddress()\n    const signerEnsName = await lookupEnsName(signerAddress, provider)\n\n    // Prepopulate the input address or ENS name (if they aren't populated yet)\n    const inputAddressOrName = this.state.inputAddressOrName || signerEnsName || signerAddress\n    const inputAddress = await this.parseInputAddress(inputAddressOrName)\n\n    this.setState({ signer, signerAddress, signerEnsName, inputAddressOrName, inputAddress })\n  }\n\n  async handleInputAddressChanged(event: ChangeEvent<HTMLInputElement>) {\n    // Update input value\n    const inputAddressOrName = event.target.value\n    this.setState({ inputAddressOrName })\n\n    // Update input address if it is valid\n    const inputAddress = await this.parseInputAddress(inputAddressOrName)\n    if (inputAddress) {\n      this.setState({ inputAddress })\n    }\n  }\n\n  async parseInputAddress(inputAddressOrName: string): Promise<string | undefined> {\n    // If no provider is set, this means that the browser is not web3 enabled\n    // and the fallback Infura provider is currently rate-limited\n    if (!this.state.provider) {\n      alert('Please use a web3 enabled browser to use mtv.revoke')\n      this.setState({ inputAddressOrName: undefined })\n      return\n    }\n\n    // If the input is an ENS name, validate it, resolve it and return it\n    if (inputAddressOrName.endsWith('.eth')) {\n      try {\n        const address = await this.state.provider.resolveName(inputAddressOrName)\n        return address ? address : undefined\n      } catch {\n        return undefined\n      }\n    }\n\n    // If the input is an address, validate it and return it\n    try {\n      return getAddress(inputAddressOrName)\n    } catch {\n      return undefined\n    }\n  }\n\n  render(): ReactNode {\n    return (\n      <Container fluid className=\"App\">\n        {this.renderHeader()}\n        {this.renderAddressInput()}\n        {this.renderTokenList()}\n        {this.renderFooter()}\n        {this.renderToastContainer()}\n      </Container>\n    )\n  }\n\n  renderHeader() {\n    return (\n      <Row className=\"Header\">\n        <Col className=\"my-auto\"><img className=\"logo\" src=\"revoke.svg\" alt=\"mtv.revoke.ac logo\"/></Col>\n      </Row>\n    )\n  }\n\n  renderDonateButton() {\n    if(!this.state.chainId) return\n    return <DonateButton signer={this.state.signer} chainId={this.state.chainId} />\n  }\n\n  renderConnectButton() {\n    const text = this.state.signerAddress\n      ? this.state.signerEnsName || shortenAddress(this.state.signerAddress)\n      : 'Connect web3'\n\n    return (\n      <Button style={{ border: '1px solid white' }} variant=\"primary\" onClick={() => this.connectWeb3()}>{text}</Button>\n    )\n  }\n\n  renderAddressInput() {\n\n  const text = this.state.signerAddress\n    ? this.state.signerEnsName || this.state.signerAddress\n    : 'Connect web3'\n\n    return (\n      <Row className=\"AddressRow\">\n        <Col className=\"my-auto\" lg=\"6\" md=\"12\" sm=\"12\">\n          <Button className=\"web3Button my-auto AddressInput text-center\" style={{width:'100%'}} onClick={() => this.connectWeb3()}>{text}</Button>\n        </Col>\n      </Row>\n    )\n  }\n\n  renderTokenList() {\n    if (!this.state.inputAddress) return\n\n    return (<Dashboard\n      provider={this.state.provider}\n      chainId={this.state.chainId}\n      signer={this.state.signer}\n      signerAddress={this.state.signerAddress}\n      inputAddress={this.state.inputAddress}\n    />)\n  }\n\n  renderFooter() {\n    return (\n      <div className=\"footer\">\n        <p><a href=\"https://github.com/0x13e/mtv.revoke\" className=\"cyanLink\">GitHub Link</a> | Forked from <a href=\"https://kalis.me/\" className=\"cyanLink\">Rosco Kalis's</a> (<a href=\"https://github.com/rkalis/revoke.cash\" className=\"cyanLink\">revoke.cash</a>)<br/><b>Please consider donating to him if you find this useful</b></p>\n      </div>\n    )\n  }\n\n  renderToastContainer() {\n    return (\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.scss'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}